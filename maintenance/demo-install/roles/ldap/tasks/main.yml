---
- name: OpenLDAP domain is set in debconf
  debconf:
    name: 'slapd'
    question: '{{ item }}'
    vtype: 'string'
    value: '{{ ldap_domain }}'
  with_items: [ 'slapd/domain', 'shared/organization' ]

- name: openldap is installed
  apt: package={{ item }} state=present
  with_items:
  - ldap-utils
  - slapd

# Admin account
- name: find current and expected account details
  command: "{{ item }}"
  changed_when: false
  no_log: true
  register: result
  ignore_errors: True
  with_items:
  - slappasswd -s "{{ ldap_password }}"
  - ldapsearch -H ldapi:// -LLL -Q -Y EXTERNAL -b "cn=config" "(olcRootDN={{ ldap_admin }})" dn olcRootPW
  - ldapwhoami -vvv -H ldapi:// -D {{ ldap_admin }} -x -w "{{ ldap_password }}"

- name: expected account details setup applied to temp file
  copy:
    content: |
      {{ result.results[1].stdout_lines[0] }}
      changetype: modify
      replace: olcRootPW
      olcRootPW: {{ result.results[0].stdout_lines[0] }}
    dest: ~/.ldap_set
  when: result|failed

- name: admin account details are up to date
  shell: ldapmodify -H ldapi:// -Q -Y EXTERNAL < ~/.ldap_set
  when: result|failed

- name: temp file is cleaned up
  file: dest="~/.ldap_set" state=absent

# Test accounts
- name: check if we have made test accounts already
  shell: ldapsearch -H ldapi:// -LLL -Q -Y EXTERNAL -b "{{ ldap_domain_ldif }}" cn={{ test_admin_name }} cn | grep "dn:"
  register: result
  ignore_errors: True
  changed_when: false

- name: load in test acct password
  shell: slappasswd -s "{{ item }}" | base64
  changed_when: false
  no_log: true
  register: testpw
  ignore_errors: True
  with_items:
  - "{{ test_admin_password }}"
  - "{{ test_assistant_password }}"

- debug:
    var: testpw

- name: test account details are in temp file
  copy:
    content: |
      dn: cn={{ test_admin_name }},{{ ldap_domain_ldif }}
      changetype: add
      objectClass: simpleSecurityObject
      objectClass: organizationalRole
      cn: {{ test_admin_name }}
      description: {{ test_admin_name }}
      userPassword:: {{ testpw.results[0].stdout }}
      
      dn: cn={{ test_assistant_name }},{{ ldap_domain_ldif }}
      changetype: add
      objectClass: simpleSecurityObject
      objectClass: organizationalRole
      cn: {{ test_assistant_name }}
      description: {{ test_assistant_name }}
      userPassword:: {{ testpw.results[1].stdout }}
    dest: ~/.ldap_set
  when: result|failed

- name: test account details are up to date
  shell: ldapmodify -H ldapi:// -D {{ ldap_admin }} -x -w "{{ ldap_password }}" < ~/.ldap_set
  when: result|failed

- name: temp file is cleaned up
  file: dest="~/.ldap_set" state=absent
